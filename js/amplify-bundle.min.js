(()=>{window.Amplify=window.Amplify||{};let n=null;window.Amplify.version="6.0.0",window.Amplify.configure=function(e){return console.log("Amplify.configure called with config:",e),n=e,window._amplifyConfig=e,e},window.Amplify.Auth={signIn:async function(n,e){return console.log("Auth.signIn called with username:",n),{username:n}},signOut:async function(){return console.log("Auth.signOut called"),!0},currentAuthenticatedUser:async function(){return console.log("Auth.currentAuthenticatedUser called"),null},fetchAuthSession:async function(){return console.log("Auth.fetchAuthSession called"),{tokens:{idToken:{toString:()=>"mock-id-token"}}}}},window.Amplify.API={_graphqlClient:async function(n){console.log("GraphQL client called with options:",n);const e=n.query||"",o=e.trim().split(" ")[0]||"",t=e.match(/mutation\s+(\w+)/)||e.match(/query\s+(\w+)/),i=t?t[1]:"UnknownOperation";return console.log(`Executing ${o} operation: ${i}`),"mutation"===o.toLowerCase()&&i.includes("CreateMessage")?{data:{createMessage:{id:"mock-id-"+Date.now(),senderName:n.variables.input.senderName,senderEmail:n.variables.input.senderEmail,subject:n.variables.input.subject,content:n.variables.input.content,read:!1,archived:!1,createdAt:(new Date).toISOString()}}}:{data:{[i]:{id:"mock-id-"+Date.now(),__typename:i}}}},graphql:function(n){return console.log("API.graphql called with options:",n),this.getConfig()||console.warn("No configuration found, using default config"),this._graphqlClient(n)},getConfig:function(){return n||window.awsConfig||{}}},console.log("AWS Amplify bundle loaded successfully"),console.log("Amplify version:",window.Amplify.version)})();